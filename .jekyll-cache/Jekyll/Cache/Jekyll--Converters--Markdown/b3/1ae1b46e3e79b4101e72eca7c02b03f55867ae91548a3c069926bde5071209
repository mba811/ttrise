I"Ý.<p>Often times I find myself with spatial data in non-spatial formats. Equally as often, those data cannot be permanently changed into a spatial format since they are being continually updated in their original format by someone else. Rendering spatial data requires GeoJSON. GeoJSON is derived from JSON (JavaScript Object Notation) and adds a spatial key/value pair into the mix. The data type has a required format, which can be found at <a href="http://geojson.org">geojson.org</a> and seen below:</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="p">{</span>
  <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Feature</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">geometry</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span>
    <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Point</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">coordinates</span><span class="dl">"</span><span class="p">:</span> <span class="p">[</span><span class="mf">125.6</span><span class="p">,</span> <span class="mf">10.1</span><span class="p">]</span>
  <span class="p">},</span>
  <span class="dl">"</span><span class="s2">properties</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span>
    <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Dinagat Islands</span><span class="dl">"</span>
  <span class="p">}</span>
<span class="p">}</span></code></pre></figure>

<p>Itâ€™s effectively a javascript object with a standardized format, including <strong>type</strong>, <strong>geometry</strong>, and any number of <strong>properties</strong> (metadata). Much of the time Iâ€™m able to convert the data on the client side into a useable geojson format, which can then be mapped. The loop structure is consistent, but how I obtain the data can vary (ajax, jQuery, php, etc.). The use case for this loop is extremely app-specific, so it may not be the thing you need. I just tend to use it a lot for development purposes.</p>

<p>###Basic Loop</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">geojson</span> <span class="o">=</span> <span class="p">{};</span>
<span class="nx">geojson</span><span class="p">[</span><span class="dl">'</span><span class="s1">type</span><span class="dl">'</span><span class="p">]</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">FeatureCollection</span><span class="dl">'</span><span class="p">;</span>
<span class="nx">geojson</span><span class="p">[</span><span class="dl">'</span><span class="s1">features</span><span class="dl">'</span><span class="p">]</span> <span class="o">=</span> <span class="p">[];</span>
 
<span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">k</span> <span class="k">in</span> <span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">var</span> <span class="nx">newFeature</span> <span class="o">=</span> <span class="p">{</span>
    <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Feature</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">geometry</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span>
      <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Point</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">coordinates</span><span class="dl">"</span><span class="p">:</span> <span class="nb">parseFloat</span><span class="p">(</span><span class="nx">data</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">lng</span><span class="p">),</span> <span class="nb">parseFloat</span><span class="p">(</span><span class="nx">data</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">lon</span><span class="p">)]</span>
    <span class="p">},</span>
    <span class="dl">"</span><span class="s2">properties</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span>
      <span class="dl">"</span><span class="s2">title</span><span class="dl">"</span><span class="p">:</span> <span class="nx">data</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">title</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">description</span><span class="dl">"</span><span class="p">:</span> <span class="nx">data</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">desc</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="nx">geojson</span><span class="p">[</span><span class="dl">'</span><span class="s1">features</span><span class="dl">'</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">newFeature</span><span class="p">);</span>
<span class="p">}</span></code></pre></figure>

<p>###Tabletop.js</p>

<p>Typically I see data come in .csv formats, which is great for keeping things under control and organized - but difficult for the browser. Lately Iâ€™ve seen most .csv on Google Spreadsheets - which can work to our benefit.</p>

<p>Introducing <a href="https://github.com/jsoma/tabletop">tabletop.js</a>, a slick javascript library that grabs data from Google Spreadsheets and returns a data object for you to manipulate. Two things need to happen here:</p>

<ol>
  <li>Tabletop makes a call to the Spreadsheets API and returns a nice JSON object</li>
  <li>You loop through that returned data JSON object and create a new GeoJSON object</li>
</ol>

<p>Things start to get redundant, but for development and a reasonable number of points this works out great.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">geojson</span> <span class="o">=</span> <span class="p">{};</span>
<span class="nx">geojson</span><span class="p">[</span><span class="dl">'</span><span class="s1">type</span><span class="dl">'</span><span class="p">]</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">FeatureCollection</span><span class="dl">'</span><span class="p">;</span>
<span class="nx">geojson</span><span class="p">[</span><span class="dl">'</span><span class="s1">features</span><span class="dl">'</span><span class="p">]</span> <span class="o">=</span> <span class="p">[];</span>

<span class="nx">Tabletop</span><span class="p">.</span><span class="nx">init</span><span class="p">({</span>
  <span class="na">key</span><span class="p">:</span> <span class="dl">'</span><span class="s1">spreadsheet-key</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">callback</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">,</span> <span class="nx">tabletop</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">data</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">key</span><span class="p">,</span> <span class="nx">val</span><span class="p">)</span> <span class="p">{</span>
      <span class="kd">var</span> <span class="nx">newFeature</span> <span class="o">=</span> <span class="p">{</span>
        <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Feature</span><span class="dl">"</span><span class="p">,</span>
        <span class="dl">"</span><span class="s2">geometry</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span>
          <span class="dl">"</span><span class="s2">type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Point</span><span class="dl">"</span><span class="p">,</span>
          <span class="dl">"</span><span class="s2">coordinates</span><span class="dl">"</span><span class="p">:</span> <span class="p">[</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">val</span><span class="p">.</span><span class="nx">longitude</span><span class="p">),</span> <span class="nb">parseFloat</span><span class="p">(</span><span class="nx">val</span><span class="p">.</span><span class="nx">latitude</span><span class="p">)]</span>
        <span class="p">},</span>
        <span class="dl">"</span><span class="s2">properties</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span>
          <span class="dl">"</span><span class="s2">title</span><span class="dl">"</span><span class="p">:</span> <span class="nx">val</span><span class="p">.</span><span class="nx">groupname</span><span class="p">,</span>
          <span class="dl">"</span><span class="s2">description</span><span class="dl">"</span><span class="p">:</span> <span class="nx">val</span><span class="p">.</span><span class="nx">fulldescription</span><span class="p">,</span>
          <span class="dl">"</span><span class="s2">shortdesc</span><span class="dl">"</span><span class="p">:</span> <span class="nx">val</span><span class="p">.</span><span class="nx">shortdescription</span><span class="p">,</span>
          <span class="dl">"</span><span class="s2">twitter</span><span class="dl">"</span><span class="p">:</span> <span class="nx">val</span><span class="p">.</span><span class="nx">twitter</span><span class="p">,</span>
          <span class="dl">"</span><span class="s2">contact</span><span class="dl">"</span><span class="p">:</span> <span class="nx">val</span><span class="p">.</span><span class="nx">contactname</span><span class="p">,</span>
          <span class="dl">"</span><span class="s2">contactEmail</span><span class="dl">"</span><span class="p">:</span> <span class="nx">val</span><span class="p">.</span><span class="nx">contactemail</span><span class="p">,</span>
          <span class="dl">"</span><span class="s2">marker-size</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">large</span><span class="dl">"</span><span class="p">,</span>
          <span class="dl">"</span><span class="s2">marker-color</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">#4682b4</span><span class="dl">"</span><span class="p">,</span>
          <span class="dl">"</span><span class="s2">marker-symbol</span><span class="dl">"</span><span class="p">:</span> <span class="dl">""</span>
        <span class="p">}</span>
      <span class="p">}</span>
      <span class="nx">geojson</span><span class="p">[</span><span class="dl">'</span><span class="s1">features</span><span class="dl">'</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">newFeature</span><span class="p">);</span> 
    <span class="p">});</span>
    <span class="nx">mapIt</span><span class="p">(</span><span class="nx">geojson</span><span class="p">);</span>
  <span class="p">},</span>
  <span class="na">simpleSheet</span><span class="p">:</span> <span class="kc">true</span>
<span class="p">});</span></code></pre></figure>
:ET