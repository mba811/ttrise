I"ü<p>The responsive nature of the modern web is making content integration tricky - especially in the age of video. Working with Youtube videos typically involves <span>&lt;iframe&gt;</span> embeds, which donâ€™t give you a ton of freedom due to Cross Origin Issues unless you use the Youtube API. The API can be a bit cumbersome for a simple, single video though.</p>

<p>Making these videos respond to your screen size can be an issue largely because your iframe has to be malleable and responsive, but that doesnâ€™t mean your content within the <span>&lt;iframe&gt;</span> can be responsive. So, the responsive video turns into a hack. Albiet, a very reliable and useful one!</p>

<h3 id="css">CSS</h3>

<pre><code class="language-CSS">.video {
  position: relative;
  padding-bottom: 56.25%;
  height: 0;
  overflow: hidden;
  width:100%;
}
.video iframe {
  position: absolute;
  width:100%;
  height:100%;
}
</code></pre>

<h3 id="html">HTML</h3>

<pre><code class="language-HTML">&lt;div class="video"&gt;
&lt;iframe src="..." frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
</code></pre>

<div class="video">
<iframe src="http://www.youtube.com/embed/BPkMh7bR4PE?rel=0" frameborder="0" allowfullscreen=""></iframe>
</div>

<p>This trick is possible because of the extra padding set to the <span>.video</span> div, which is at a percentage of its size and will therefore scale if the <span>.video</span> div changes in width. The <span>&lt;iframe&gt;</span> then scales with it and subsequently, the video itself.</p>

<p>This of course is relying on your video to be at the standard 16:9 screen ratio (<em>notice 9 divided by 16 is .5625</em>) - hence <strong>56.25%</strong> in the padding. Other videos will need other padding percentages to fit their ratio.</p>
:ET